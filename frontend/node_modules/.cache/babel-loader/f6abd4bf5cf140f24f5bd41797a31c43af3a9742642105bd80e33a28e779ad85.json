{"ast":null,"code":"import _toConsumableArray from \"D:/zlib/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.parse-int.js\";\nexport default {\n  name: 'SearchResults',\n  props: {\n    books: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    platforms: {\n      type: Array,\n      \"default\": function _default() {\n        return [{\n          id: 'zlibrary',\n          name: 'Z-Library',\n          available: true,\n          total: 0\n        }];\n      }\n    },\n    hasSearched: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  data: function data() {\n    return {\n      sortOrders: {\n        main: 'none',\n        // 'none', 'asc', 'desc'\n        example: 'none' // Separate sort order for example books\n      },\n      originalBooks: {\n        main: [],\n        example: []\n      },\n      exampleBooks: [{\n        title: '示例书籍 1',\n        author: '作者名称',\n        year: '2024',\n        pages: '300',\n        language: '简体中文',\n        filesize: '10 MB',\n        extension: 'PDF',\n        publisher: '示例出版社',\n        source: 'Z-Library',\n        platform_id: 'zlibrary',\n        isbn: '1234567890'\n      }, {\n        title: '示例书籍 2',\n        author: '示例作者',\n        year: '2023',\n        pages: '250',\n        language: '英文',\n        filesize: '8 MB',\n        extension: 'EPUB',\n        publisher: 'Example Press',\n        source: 'Z-Library',\n        platform_id: 'zlibrary',\n        isbn: '0987654321'\n      }]\n    };\n  },\n  computed: {\n    sortedBooks: function sortedBooks() {\n      return {\n        main: this.sortOrders.main === 'none' ? this.originalBooks.main : this.sortBooks(this.books, this.sortOrders.main),\n        example: this.sortOrders.example === 'none' ? this.exampleBooks : this.sortBooks(this.exampleBooks, this.sortOrders.example)\n      };\n    }\n  },\n  methods: {\n    toggleSort: function toggleSort(table) {\n      // Cycle through 'none' -> 'desc' -> 'asc' -> 'none'\n      var currentOrder = this.sortOrders[table];\n      switch (currentOrder) {\n        case 'none':\n          this.$set(this.sortOrders, table, 'desc');\n          break;\n        case 'desc':\n          this.$set(this.sortOrders, table, 'asc');\n          break;\n        case 'asc':\n          this.$set(this.sortOrders, table, 'none');\n          break;\n      }\n    },\n    getSortTitle: function getSortTitle(table) {\n      switch (this.sortOrders[table]) {\n        case 'none':\n          return '点击降序排列';\n        case 'desc':\n          return '点击升序排列';\n        case 'asc':\n          return '点击取消排序';\n      }\n    },\n    getSortIcon: function getSortIcon(table) {\n      switch (this.sortOrders[table]) {\n        case 'none':\n          return 'bi-dash';\n        case 'desc':\n          return 'bi-sort-down';\n        case 'asc':\n          return 'bi-sort-up';\n      }\n    },\n    sortBooks: function sortBooks(books, order) {\n      return _toConsumableArray(books).sort(function (a, b) {\n        var yearA = parseInt(a.year) || 0;\n        var yearB = parseInt(b.year) || 0;\n        if (order === 'asc') {\n          return yearA - yearB;\n        } else if (order === 'desc') {\n          return yearB - yearA;\n        }\n        return 0;\n      });\n    }\n  },\n  created: function created() {\n    // Preserve the original order of the main books\n    this.originalBooks.main = _toConsumableArray(this.books);\n  },\n  watch: {\n    books: function books(newBooks) {\n      if (this.sortOrders.main === 'none') {\n        this.originalBooks.main = _toConsumableArray(newBooks);\n      } else {\n        // If sorted, maintain the sort\n        // Optional: you can decide how to handle updates when sorted\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","books","type","Array","default","platforms","id","available","total","hasSearched","Boolean","data","sortOrders","main","example","originalBooks","exampleBooks","title","author","year","pages","language","filesize","extension","publisher","source","platform_id","isbn","computed","sortedBooks","sortBooks","methods","toggleSort","table","currentOrder","$set","getSortTitle","getSortIcon","order","_toConsumableArray","sort","a","b","yearA","parseInt","yearB","created","watch","newBooks"],"sources":["D:\\zlib\\frontend\\src\\components\\SearchResults.vue"],"sourcesContent":["<template>\r\n    <div class=\"search-results\">\r\n      <!-- 平台状态栏 -->\r\n      <div class=\"platform-status-bar\" v-if=\"platforms.length > 0\">\r\n        <div class=\"platform-status-title\">搜索来源:</div>\r\n        <div class=\"platform-badges\">\r\n          <span v-for=\"platform in platforms\" \r\n                :key=\"platform.id\"\r\n                :class=\"['platform-badge', { 'platform-badge-available': platform.available }]\">\r\n            {{ platform.name }}: {{ platform.available ? `找到 ${platform.total} 个结果` : '无结果' }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 搜索结果表格 -->\r\n      <div class=\"results-table\" v-if=\"books.length > 0\">\r\n        <div class=\"table-header\">\r\n          <div class=\"col-book-info\">\r\n            书籍信息\r\n            <button class=\"sort-button\" @click=\"toggleSort('main')\" :title=\"getSortTitle('main')\">\r\n              年份\r\n              <i class=\"bi\" :class=\"getSortIcon('main')\"></i>\r\n            </button>\r\n          </div>\r\n          <div class=\"col-author\">作者</div>\r\n          <div class=\"col-publisher\">出版商</div>\r\n          <div class=\"col-link\">直达链接</div>\r\n          <div class=\"col-source\">来源平台</div>\r\n        </div>\r\n  \r\n        <div class=\"table-row\" v-for=\"book in sortedBooks.main\" :key=\"book.isbn\">\r\n          <div class=\"col-book-info\">\r\n            <div class=\"book-title\">{{ book.title }}</div>\r\n            <div class=\"book-details\">\r\n              <span>{{ book.year }}</span>\r\n              <span>| {{ book.language }}</span>\r\n              <span>| {{ book.filesize }}</span>\r\n              <span>| {{ book.extension }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-author\">{{ book.author }}</div>\r\n          <div class=\"col-publisher\">{{ book.publisher }}</div>\r\n          <div class=\"col-link\">\r\n            <a :href=\"book.book_url\" target=\"_blank\" class=\"download-link\">\r\n              <i class=\"fas fa-download\"></i> 下载\r\n            </a>\r\n          </div>\r\n          <div class=\"col-source\">\r\n            <span :class=\"['source-badge', `source-${book.platform_id}`]\">\r\n              {{ book.source }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 无结果提示 -->\r\n      <div v-else-if=\"hasSearched\" class=\"no-results\">\r\n        未找到相关书籍\r\n      </div>\r\n  \r\n      <!-- 默认示例书籍 -->\r\n      <div v-else class=\"example-books\">\r\n        <div class=\"example-title\">示例书籍</div>\r\n        <div class=\"results-table\">\r\n          <div class=\"table-header\">\r\n            <div class=\"col-book-info\">\r\n              书籍信息\r\n              <button class=\"sort-button\" @click=\"toggleSort('example')\" :title=\"getSortTitle('example')\">\r\n                年份\r\n                <i class=\"bi\" :class=\"getSortIcon('example')\"></i>\r\n              </button>\r\n            </div>\r\n            <div class=\"col-author\">作者</div>\r\n            <div class=\"col-publisher\">出版商</div>\r\n            <div class=\"col-link\">直达链接</div>\r\n            <div class=\"col-source\">来源平台</div>\r\n          </div>\r\n          \r\n          <div class=\"table-row\" v-for=\"book in sortedBooks.example\" :key=\"book.isbn\">\r\n            <div class=\"col-book-info\">\r\n              <div class=\"book-title\">{{ book.title }}</div>\r\n              <div class=\"book-details\">\r\n                <span>{{ book.year }}</span>\r\n                <span>| {{ book.language }}</span>\r\n                <span>| {{ book.filesize }}</span>\r\n                <span>| {{ book.extension }}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-author\">{{ book.author }}</div>\r\n            <div class=\"col-publisher\">{{ book.publisher }}</div>\r\n            <div class=\"col-link\">\r\n              <button class=\"download-link\" disabled>\r\n                <i class=\"fas fa-download\"></i> 示例\r\n              </button>\r\n            </div>\r\n            <div class=\"col-source\">\r\n              <span class=\"source-badge\">{{ book.source }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'SearchResults',\r\n    props: {\r\n      books: {\r\n        type: Array,\r\n        default: () => []\r\n      },\r\n      platforms: {\r\n        type: Array,\r\n        default: () => [\r\n          { id: 'zlibrary', name: 'Z-Library', available: true, total: 0 }\r\n        ]\r\n      },\r\n      hasSearched: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        sortOrders: {\r\n          main: 'none',      // 'none', 'asc', 'desc'\r\n          example: 'none'    // Separate sort order for example books\r\n        },\r\n        originalBooks: {\r\n          main: [],\r\n          example: []\r\n        },\r\n        exampleBooks: [\r\n          {\r\n            title: '示例书籍 1',\r\n            author: '作者名称',\r\n            year: '2024',\r\n            pages: '300',\r\n            language: '简体中文',\r\n            filesize: '10 MB',\r\n            extension: 'PDF',\r\n            publisher: '示例出版社',\r\n            source: 'Z-Library',\r\n            platform_id: 'zlibrary',\r\n            isbn: '1234567890'\r\n          },\r\n          {\r\n            title: '示例书籍 2',\r\n            author: '示例作者',\r\n            year: '2023',\r\n            pages: '250',\r\n            language: '英文',\r\n            filesize: '8 MB',\r\n            extension: 'EPUB',\r\n            publisher: 'Example Press',\r\n            source: 'Z-Library',\r\n            platform_id: 'zlibrary',\r\n            isbn: '0987654321'\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    computed: {\r\n      sortedBooks() {\r\n        return {\r\n          main: this.sortOrders.main === 'none' ? this.originalBooks.main : this.sortBooks(this.books, this.sortOrders.main),\r\n          example: this.sortOrders.example === 'none' ? this.exampleBooks : this.sortBooks(this.exampleBooks, this.sortOrders.example)\r\n        };\r\n      }\r\n    },\r\n    methods: {\r\n      toggleSort(table) {\r\n        // Cycle through 'none' -> 'desc' -> 'asc' -> 'none'\r\n        const currentOrder = this.sortOrders[table];\r\n        switch(currentOrder) {\r\n          case 'none':\r\n            this.$set(this.sortOrders, table, 'desc');\r\n            break;\r\n          case 'desc':\r\n            this.$set(this.sortOrders, table, 'asc');\r\n            break;\r\n          case 'asc':\r\n            this.$set(this.sortOrders, table, 'none');\r\n            break;\r\n        }\r\n      },\r\n      getSortTitle(table) {\r\n        switch(this.sortOrders[table]) {\r\n          case 'none':\r\n            return '点击降序排列';\r\n          case 'desc':\r\n            return '点击升序排列';\r\n          case 'asc':\r\n            return '点击取消排序';\r\n        }\r\n      },\r\n      getSortIcon(table) {\r\n        switch(this.sortOrders[table]) {\r\n          case 'none':\r\n            return 'bi-dash';\r\n          case 'desc':\r\n            return 'bi-sort-down';\r\n          case 'asc':\r\n            return 'bi-sort-up';\r\n        }\r\n      },\r\n      sortBooks(books, order) {\r\n        return [...books].sort((a, b) => {\r\n          const yearA = parseInt(a.year) || 0;\r\n          const yearB = parseInt(b.year) || 0;\r\n          if (order === 'asc') {\r\n            return yearA - yearB;\r\n          } else if (order === 'desc') {\r\n            return yearB - yearA;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n    },\r\n    created() {\r\n      // Preserve the original order of the main books\r\n      this.originalBooks.main = [...this.books];\r\n    },\r\n    watch: {\r\n      books(newBooks) {\r\n        if (this.sortOrders.main === 'none') {\r\n          this.originalBooks.main = [...newBooks];\r\n        } else {\r\n          // If sorted, maintain the sort\r\n          // Optional: you can decide how to handle updates when sorted\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* (保持您现有的样式不变) */\r\n  \r\n  /* 这里省略样式以简洁起见 */\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}